{"version":3,"sources":["components/header/Header.jsx","components/footer/Footer.jsx","actions/index.js","components/playground/loader/ModalDefault.jsx","components/playground/loader/Loader.jsx","components/playground/navio-container/ActionGroup.jsx","components/playground/navio-container/sidebar/Attribute.jsx","components/playground/navio-container/sidebar/SortableItem.jsx","components/playground/navio-container/sidebar/SortableList.jsx","components/playground/navio-container/sidebar/Sider.jsx","components/playground/navio-container/NavioContainer.jsx","components/playground/sample-data/Sample.jsx","components/playground/Playground.jsx","components/loader/Loader.jsx","components/App.jsx","reducers/shipyard.js","reducers/ui.js","reducers/index.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","style","fontSize","textAlign","icon","marginRight","type","Footer","href","target","rel","types","getType","attribute","notNumber","isNaN","isDate","attr","mydate","Date","getDate","checkDate","getAttributesType","keys","atts","data","attributes","JSON","parse","stringify","ids","reg","sample","n","ss","i","push","map","d","Math","floor","length","getSample","_loop","key","test","name","id","res","accumulative","forEach","max","typei","Object","slicedToArray","setData","__id","alias","checked","__visible","_getAttributesType","_getAttributesType2","row","att","mynumber","source","setComponentClasses","changeCheckStatus","status","changeTypeStatus","toggleSettingsVisible","index","visible","connect","state","ui","datasets","shipyard","confirmLoading","dispatch","showModal","handleOk","handleCancel","toggleLoading","toggleDataLoaded","_ref","es_button","ghost","onClick","modal","title","onOk","onCancel","width","footer","gutter","col","xs","sm","md","lg","xl","card","d3","concat","then","catch","err","console","error","className","height","overflowY","cursor","marginBottom","n_attributes","size","description","Dragger","Upload","handleFile","file","reader","window","FileReader","onload","lEvent","values","format","split","pop","toLowerCase","vega","result","readAsText","margin","alignItems","minHeight","accept","beforeUpload","e","divider","loader_ModalDefault","ButtonGroup","Button","Group","exportData","resetData","toggleSidebar","download","rand","random","dataToExport","__i","replacer","value","header","csv","fieldName","join","unshift","blob","Blob","FileSaver","saveAs","tooltip","placement","mimeType","catColumns","seqColumns","elHtml","Option","Select","OptGroup","Attribute","_this","props","_this2","this","_this$props","toggleVisible","log","align","span","shape","setState","es_select","dropdownMatchSelectWidth","onChange","label","es_switch","defaultChecked","marginLeft","Component","SortableItem","SortableElement","setAlias","sidebar_Attribute","input","addonAfter","color","defaultValue","SortableList","SortableContainer","sidebar_SortableItem","reorderAttributes","sidebar_SortableList","onSortEnd","_ref2","oldIndex","newIndex","copy","toConsumableArray","newArr","arrayMove","cat","dat","text","bool","div","seq","NavioContainer","getScaleOrdinalScheme","scheme","scaleOrdinal","d3ScaleChromatic","getScaleOrdinalColor","scaleLinear","getScaleTimeColor","scaleTime","setupNavio","nn","navio","select","updateCallback","updateFilteredData","addCategoricalAttrib","addTextAttrib","addBooleanAttrib","addDivergingAttrib","addDateAttrib","addSequentialAttrib","updated","updateAttribute","deleteWidget","myNode","document","getElementById","firstChild","removeChild","sidebarStyles","visStyles","showSidebar","navio_container_ActionGroup","Sider","ref","preview","slice","columns","seqIndex","toString","column","dataIndex","p","__seqId","table","rowKey","bordered","pagination","dataSource","scroll","x","y","dataLoaded","navio_container_NavioContainer","sample_data_Sample","loader_Loader","loading","Layout","Content","headerStyle","padding","backgroundColor","boxShadow","mainStyle","App","components_loader_Loader","layout","affix","App_Header","header_Header","playground_Playground","App_Footer","footer_Footer","initialState","arguments","undefined","action","assign","datum","attributeName","closed","array","k","componentClasses","combineReducers","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","loggerMiddleware","createLogger","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","render","react_redux_es","components_App","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d8b30d03.chunk.js","sourcesContent":["import React from 'react';\nimport { Icon } from 'antd';\n\nconst Header = () => (\n  <div>\n    <div style={{fontSize: '1.5em', textAlign: 'center'}}>\n      <Icon style={{ marginRight: '0.5em' }} type=\"compass\" />\n      Shipyard\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Icon } from 'antd';\n\nconst Footer = () => (\n  <div style={{ textAlign: 'left' }}>\n    <a\n      href=\"https://github.com/john-guerra/Navio\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Github Project MIT License <Icon type=\"github\" />\n    </a>\n  </div>\n);\n\nexport default Footer;\n","/*\n *  action types\n */\n\nexport const SET_DATA = 'SET_DATA';\nexport const SET_ATTRIBUTES = 'SET_ATTRIBUTES';\nexport const SET_ATTRIBUTE_COLOR = 'SET_ATTRIBUTE_COLOR';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const HANDLE_OK = 'HANDLE_OK';\nexport const HANDLE_CANCEL = 'HANDLE_CANCEL';\nexport const TOGGLE_LOADING = 'TOGGLE_LOADING';\nexport const TOGGLE_DATA_LOADED = 'TOGGLE_DATA_LOADED';\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const RESET_DATA = 'RESET_DATA';\nexport const CHANGE_CHECK_STATUS = 'CHANGE_CHECK_STATUS';\nexport const CHANGE_TYPE_STATUS = 'CHANGE_TYPE_STATUS';\nexport const UPDATE_ATTRIBUTE = 'UPDATE_ATTRIBUTE';\nexport const UPDATE_FILTERED_DATA = 'UPDATE_FILTERED_DATA';\nexport const TOGGLE_SETTINGS_VISIBLE = 'TOGGLE_SETTINGS_VISIBLE';\nexport const TOGGLE_COLOR_VISIBLE = 'TOGGLE_COLOR_VISIBLE';\nexport const HIDE_ATTRIBUTE = 'HIDE_ATTRIBUTE';\nexport const SHOW_ATTRIBUTE = 'SHOW_ATTRIBUTE';\nexport const SET_COMPONENT_CLASSES = 'SET_COMPONENT_CLASSES';\nexport const SWAP_COMPONENT_CLASSES = 'SWAP_COMPONENT_CLASSES';\nexport const SET_ALIAS = 'SET_ALIAS';\n\nconst seq = 'SEQUENTIAL';\nconst cat = 'CATEGORICAL';\nconst dat = 'DATE';\nconst types = [\n  [seq, 'NUMBER'],\n  [dat, dat],\n  [cat, 'STRING']\n]\n/**\n * Method that return true if a string is a date\n * @param {*} attr\n */\nconst checkDate = (attr) => {\n  const mydate = new Date(attr);\n  if (isNaN(mydate.getDate())) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Returns the type of attribute casting each case.\n * @param {*} attribute\n */\nconst getType = (attribute) => {\n  const notNumber = isNaN(attribute);\n  const isDate = checkDate(attribute);\n  if (!notNumber) {\n    // return [seq, 'NUMBER'];\n    return 0;\n  } else if (isDate) {\n    // return [dat, 'DATE'];\n    return 1;\n  } else {\n    // return [cat, 'STRING'];\n    return 2;\n  }\n}\n/**\n * Function that returns n samples from array\n * @param {Integer} n - Number of samples\n * @param {Array<Object>} data - Array with data objects\n */\nconst getSample = (n, data) => {\n  let ss = [];\n  for (let i = 1; i < n + 1; i++) {\n    ss.push(i);\n  }\n  const indexes = ss.map(d => Math.floor(data.length*(d/n))-1);\n  const sample = indexes.map(d => data[d]);\n  return sample;\n\n}\nconst getAttributesType = (keys, atts, data) => {\n  let attributes = JSON.parse(JSON.stringify(atts));\n  let ids = [];\n  // regular expression used to match strings starting and finishing with id or key or in a word within non-word characters\n  const reg = /^(id|key)|(id|key)$|\\W+(key|id)+\\W+|\\W+(key|id)+\\W*/gmi;\n  // returns 6 uniformly distributed rows\n  const sample = getSample(6, data);\n  for (let key = 0; key < keys.length; key += 1) {\n    // checks for ID\n    if (reg.test(attributes[key].name)) {\n      attributes[key].id = true;\n      ids.push(atts[key].name);\n    }\n    const sampleAttributes = sample.map(d => d[keys[key]]);\n    const res = sampleAttributes.map(getType);\n    let accumulative = [0,0,0];\n    res.forEach(d => accumulative[d] += 1);\n    let max = 0;\n    let i = 0;\n    for(let typei = 0; typei < accumulative.length; typei++) {\n      if(accumulative[typei] > max) {\n        max = accumulative[typei];\n        i = typei;\n      }\n    }\n    const [type] = types[i];\n    attributes[key].type = type;\n  }\n  return [attributes, ids];\n};\n\n/*\n * action creators\n */\nexport const setData = (data) => {\n  // const source = data.slice(0);\n  /* Creates an empty array that will contain the metadata of the attributes */\n  let attributes = [];\n  let ids = [];\n  let __id = 0;\n  const keys = Object.keys(data[0]);\n  for (let i = 0; i < keys.length; i += 1) {\n    const attribute = {\n      name: keys[i],\n      alias: keys[i],\n      checked: true,\n      type: '',\n      id: false,\n      __id: __id++,\n      __visible: false,\n    };\n    attributes.push(attribute);\n  }\n  [attributes, ids] = getAttributesType(keys, attributes, data);\n  const parsedData = data.map((row) => {\n    // let row = JSON.parse(JSON.stringify(d));\n    attributes.forEach((att)=> {\n      if (att.type === 'DATE') {\n        const mydate = new Date(row[att.name]);\n        if (isNaN(mydate.getDate())) {\n        } else {\n          row[att.name] = mydate;\n        }\n      } else if (att.type === 'SEQUENTIAL') {\n        const mynumber = +row[att.name];\n        if (isNaN(mynumber)) {\n        } else {\n          row[att.name] = mynumber;\n        }\n      }\n    });\n    return row;\n  });\n  return {\n    type: SET_DATA,\n    data: parsedData,\n    source: data,\n    attributes,\n    ids,\n  };\n};\nexport const setComponentClasses = attributes => ({\n  type: SET_COMPONENT_CLASSES,\n  attributes,\n});\n\nexport const setColor = (color, attributeName) => ({\n  type: SET_ATTRIBUTE_COLOR,\n  color,\n  attributeName,\n});\n\nexport const showModal = () => ({ type: SHOW_MODAL });\n\nexport const handleOk = () => {};\n\nexport const handleCancel = () => {};\n\nexport const toggleLoading = () => ({ type: TOGGLE_LOADING });\n\nexport const toggleDataLoaded = () => ({ type: TOGGLE_DATA_LOADED });\n\nexport const resetData = () => ({ type: RESET_DATA });\n\nexport const toggleSidebar = () => ({ type: TOGGLE_SIDEBAR });\n\nexport const changeCheckStatus = (attribute, status) => ({\n  type: CHANGE_CHECK_STATUS,\n  attribute,\n  status,\n});\n\nexport const changeTypeStatus = (attribute, status) => ({\n  type: CHANGE_TYPE_STATUS,\n  attribute,\n  status,\n});\n\nexport const updateAttribute = () => ({ type: UPDATE_ATTRIBUTE });\n\nexport const updateFilteredData = exportData => ({ type: UPDATE_FILTERED_DATA, exportData });\n\nexport const toggleSettingsVisible = (index, visible) => ({\n  type: TOGGLE_SETTINGS_VISIBLE,\n  index,\n  visible,\n});\n\nexport const setAttributes = attributes => ({\n  type: SET_ATTRIBUTES,\n  attributes,\n});\n\nexport const setAttributeColor = (color, event, index) => ({\n  type: SET_ATTRIBUTE_COLOR,\n  color,\n  event,\n  index,\n});\n\nexport const toggleColorVisible = index => ({\n  type: TOGGLE_COLOR_VISIBLE,\n  index,\n});\n\nexport const hideAttribute = index => ({\n  type: HIDE_ATTRIBUTE,\n  index,\n});\n\nexport const showAttribute = index => ({\n  type: SHOW_ATTRIBUTE,\n  index,\n})\n\nexport const swapComponentClasses = (i, j) => ({\n  type: SWAP_COMPONENT_CLASSES,\n  i,\n  j,\n})\n\nexport const setAlias = (alias, index) => ({\n  type: SET_ALIAS,\n  alias,\n  index,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, Card, Row, Col } from 'antd';\nimport { showModal, handleOk, setData, toggleLoading, toggleDataLoaded, setComponentClasses } from './../../../actions';\nimport * as d3 from 'd3';\nimport './modal.css';\n\nconst ModalDefault = ({ visible, datasets, confirmLoading, showModal, handleOk, handleCancel, setData, toggleLoading, toggleDataLoaded, setComponentClasses }) => {\n  const pathDataset = 'https://raw.githubusercontent.com/john-guerra/shipyard/master/public/datasets/';\n  const handleDataset = (name) => {\n    toggleLoading();\n    d3.csv(`${pathDataset}${name}`).then((data) => {\n      setData(data);\n      // setComponentClasses(Object.keys(data[0]));\n      toggleLoading();\n      toggleDataLoaded();\n      handleCancel();\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  return (\n    <div>\n      <Button type=\"primary\" ghost onClick={showModal}>Choose one</Button>\n      <Modal\n        title=\"Datasets\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={handleCancel}\n        width=\"90%\"\n        footer={[\n          <Button onClick={handleCancel} key=\"back\">Cancel</Button>,\n        ]}\n      >\n        <Row gutter={32}>\n          { datasets.map(d => (\n            <Col xs={24} sm={12} md={12} lg={8} xl={6} key={d.id}>\n              <Card\n                onClick={() => handleDataset(d.name)}\n                className=\"hoverable\"\n                title={d.title}\n                style={{ width: '100%', height: '30vh', overflowY: 'scroll', cursor: 'pointer', marginBottom: 32, textAlign: 'center' }}\n              >\n                <div className=\"modal__content\">\n                  <p className=\"modal__sub\">{ d.n_attributes } attributes & { d.size } rows</p>\n                  <h2>Description</h2>\n                  <p>{ d.description }</p>\n                </div>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  visible: state.ui.visible,\n  datasets: state.shipyard.datasets,\n  confirmLoading: state.ui.confirmLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showModal: () => dispatch(showModal()),\n  handleOk: name => dispatch(handleOk(name)),\n  handleCancel: () => dispatch(showModal()),\n  setData: (data) => dispatch(setData(data)),\n  toggleLoading: () => dispatch(toggleLoading()),\n  toggleDataLoaded: () => dispatch(toggleDataLoaded()),\n  setComponentClasses: atts => dispatch(setComponentClasses(atts)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalDefault);\n","import React from 'react';\nimport { Upload, Icon, Divider } from 'antd';\nimport ModalDefault from './ModalDefault';\nimport { connect } from 'react-redux';\nimport { toggleLoading, setData, toggleDataLoaded, setComponentClasses } from './../../../actions';\nimport * as vega from 'vega';\n\nconst Dragger = Upload.Dragger;\nconst Loader = ({ attributes, toggleLoading, setData, toggleDataLoaded, setComponentClasses }) => {\n  const beforeUpload = (e) => {\n    toggleLoading();\n    handleFile(e);\n  };\n  const handleFile = (file) => {\n    const reader = new window.FileReader();\n    if (file == null) {\n      return;\n    }\n    reader.onload = (lEvent) => {\n      const format = file.name.split('.').pop().toLowerCase();\n      var values;\n      try {\n        values = vega.read(lEvent.target.result, {type: format});\n        setData(values);\n        // setComponentClasses(Object.keys(values[0]));\n        toggleLoading();\n        toggleDataLoaded();\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    reader.readAsText(file);\n  }\n  return (\n    <div style={{ textAlign: 'center', margin: '1em' }}>\n      <Dragger\n        style={{ alignItems: 'center', minHeight: '70vh' }}\n        accept=\".csv,.tsv,.txt\"\n        beforeUpload={beforeUpload}\n        name=\"file\"\n      >\n        <div className=\"dragger\">\n          <p className=\"ant-upload-drag-icon\">\n            <Icon type=\"upload\" />\n          </p>\n          <h1 style={{ fontSize: '2em' }}>\n            Drag and drop or click here to upload your dataset\n          </h1>\n          <p className=\"ant-upload-hint\">*.csv, *.tsv and *.txt files allowed.</p>\n        </div>\n      </Dragger>\n      <div>\n        <Divider>\n          <p>or you can click below to explore pre-loaded datasets</p>\n        </Divider>\n      </div>\n      <div>\n        <ModalDefault />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.shipyard.attributes,\n});\n\nconst mapDispatchToPropt = dispatch => ({\n  toggleLoading: () => dispatch(toggleLoading()),\n  setData: data => dispatch(setData(data)),\n  toggleDataLoaded: () => dispatch(toggleDataLoaded()),\n  setComponentClasses: atts => dispatch(setComponentClasses(atts))\n})\n\nexport default connect(mapStateToProps, mapDispatchToPropt)(Loader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Icon, Tooltip } from 'antd';\nimport { resetData, toggleSidebar } from './../../../actions';\nimport FileSaver from 'file-saver';\n\nconst ButtonGroup = Button.Group;\nconst ActionGroup = ({ exportData, data, attributes, resetData, toggleSidebar }) => {\n  const download = (rand) => {\n    rand = rand || Math.floor(Math.random() * 999999);\n    let dataToExport = JSON.parse(JSON.stringify(exportData));\n    dataToExport.forEach(d => delete d.__i);\n    const replacer = (key, value) => value === null ? '' : value; // specify how you want to handle null values here\n    const header = Object.keys(dataToExport[0]);\n    let csv = dataToExport.map(row => header.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','));\n    csv.unshift(header.join(','));\n    csv = csv.join('\\r\\n');\n    const blob = new Blob([csv], {type: 'text/csv;charset=utf-8'});\n    FileSaver.saveAs(blob, `export_data_${rand}.csv`);\n    exportData = data;\n  };\n  const exportVisualization = () => {\n    const rand = Math.floor(Math.random() * 999999);\n    let mimeType = 'text/html';\n    let catColumns = [];\n  let seqColumns = [];\n    attributes.forEach(a => {\n      if (a.type === 'categorical') {\n        catColumns.push(a.name);\n      } else {\n        seqColumns.push(a.name);\n      }\n    })\n    const elHtml = `<!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n      <title>Navio</title>\n    </head>\n    <body>\n      <div id=\"navio\"></div>\n\n      <script src=\"https://d3js.org/d3.v4.min.js\"></script>\n      <script src=\"https://d3js.org/d3-scale-chromatic.v1.min.js\"></script>\n      <script src=\"https://unpkg.com/popper.js@1.14/dist/umd/popper.min.js\"></script>\n      <script type=\"text/javascript\" src=\"https://unpkg.com/navio/dist/navio.min.js\"></script>\n      <script type=\"text/javascript\">\n        let nn = navio(\"#navio\", 600);\n        let cat = \"CATEGORICAL\"\n        let seq = \"SEQUENTIAL\";\n        let text = \"TEXT\";\n        let bool = \"BOOLEAN\";\n        let divergent = \"DIVERGENT\";\n        let date = \"DATE\";\n      let attributes = JSON.parse('${JSON.stringify(attributes)}');\n        d3.csv(\"./export_data_${rand}.csv\", function (err, data) {\n          if (err) throw err;\n        data.forEach((row) => {\n          attributes.forEach(att => {\n            if (att.type === date) {\n              let mydate = new Date(row[att.name]);\n              if(isNaN(mydate.getDate())){\n                row[att.name] = null;\n              } else {\n                row[att.name] = mydate\n              }\n            }\n            else if (att.type === seq) {\n              let mynumber = +row[att.name];\n              if (isNaN(mynumber)) {\n                row[att.name] = null;\n              } else {\n                row[att.name] = mynumber;\n              }\n            } else if (att.type === bool) {\n              let myBool = row[att.name];\n              if (myBool.toLowerCase() === 'true') {\n                row[att.name] = true;\n              } else {\n                row[att.name] = false;\n              }\n            }\n          })\n        })\n\n        attributes.forEach((d,i) => {\n            if (d.checked) {\n              switch (d.type) {\n                case cat:\n                  nn.addCategoricalAttrib(d.name);\n                  break;\n                case text:\n                  nn.addTextAttrib(d.name);\n                  break;\n                case bool:\n                  nn.addBooleanAttrib(d.name);\n                  break;\n                case divergent:\n                  nn.addDivergingAttrib(d.name);\n                  break;\n                case date:\n                  nn.addDateAttrib(d.name);\n                  break;\n                case seq:\n                  nn.addSequentialAttrib(d.name);\n                  break\n                default:\n                  nn.addCategoricalAttrib(d.name);\n              }\n           }\n          })\n        nn.data(data);\n      });\n      </script>\n    </body>\n    </html>`;\n    download(rand);\n    mimeType = mimeType || 'text/plain';\n    const filename = 'index.html';\n    const blob = new Blob([elHtml], {type: `${mimeType};charset=utf-8`});\n    FileSaver.saveAs(blob, filename);\n  };\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <ButtonGroup>\n        <Tooltip\n          placement=\"bottom\"\n          title=\"Show side panel to setup Navio: change type, color and visibility of the attributes.\"\n        >\n          <Button onClick={toggleSidebar}>\n            <Icon type=\"setting\" />Navio\n          </Button>\n        </Tooltip>\n        <Tooltip\n          placement=\"bottom\"\n          title=\"Export the filtered data in csv format.\"\n        >\n          <Button onClick={() => download()}>\n            <Icon type=\"table\" />Export data\n          </Button>\n        </Tooltip>\n        <Tooltip\n          placement=\"bottom\"\n          title=\"Export an embedded version of the visualization (data.csv + index.html).\"\n        >\n          <Button onClick={exportVisualization}>\n              <Icon type=\"export\" />Export Vis\n          </Button>\n        </Tooltip>\n        <Tooltip placement=\"bottom\" title=\"Choose another dataset.\">\n          <Button onClick={resetData}>\n            <Icon type=\"swap\" />Change data\n          </Button>\n        </Tooltip>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  exportData: state.shipyard.exportData,\n  data: state.shipyard.data,\n  attributes: state.shipyard.attributes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetData: () => dispatch(resetData()),\n  toggleSidebar: () => dispatch(toggleSidebar()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionGroup);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button, Icon, Select, Tooltip, Switch } from 'antd';\nimport { toggleSettingsVisible, changeTypeStatus, changeCheckStatus, updateAttribute } from './../../../../actions';\nimport './attribute.css';\n\nconst { Option, OptGroup } = Select;\nclass Attribute extends Component {\n  state = {\n    checked: this.props.checked,\n  }\n  render () {\n    const { toggleVisible, changeCheckStatus, changeTypeStatus, attribute } = this.props;\n    console.log(attribute.alias);\n    const ico = 'down';\n    return (\n      <Row type=\"flex\" align=\"middle\" className=\"attribute\">\n        <Col span={2}>\n          <Tooltip\n            placement=\"right\"\n            title=\"Change color and alias\"\n          >\n            <Button shape=\"circle\" size=\"small\" onClick={() => {\n                this.setState({ visible: !attribute.__visible });\n                toggleVisible(attribute.__id, !attribute.__visible);\n              }}\n            >\n              <Icon type={ico} className={`down ${attribute.__visible ? 'down--rotated' : ''}`} />\n            </Button>\n          </Tooltip>\n        </Col>\n        <Col span={10} className=\"truncate\">{ attribute.alias }</Col>\n        <Col span={8}>\n          <Tooltip\n            placement=\"bottom\"\n            title=\"Change attribute type\"\n          >\n            <Select\n              size=\"small\"\n              style={{ width: '100%' }}\n              dropdownMatchSelectWidth={false}\n              value={attribute.type}\n              onChange={value => { this.setState({ attribute }); changeTypeStatus(attribute, value);}}\n            >\n              <OptGroup label=\"unordered\">\n                <Option value=\"CATEGORICAL\">Categorical</Option>\n                <Option value=\"TEXT\">Text</Option>\n                <Option value=\"BOOLEAN\">Boolean</Option>\n\n              </OptGroup>\n              <OptGroup label=\"ordered\">\n                <Option value=\"ORDINAL\">Ordinal</Option>\n                <Option value=\"SEQUENTIAL\">Sequential</Option>\n                <Option value=\"DATE\">Date</Option>\n                <Option value=\"DIVERGENT\">Divergent</Option>\n              </OptGroup>\n            </Select>\n          </Tooltip>\n        </Col>\n        <Col span={2}>\n          <Tooltip placement=\"right\" title=\"Here you can hide this attribute in Navio\">\n            <Switch size=\"small\" defaultChecked={true} checked={attribute.checked} style={{ marginLeft: '2em' }} onChange={checked => { this.setState({checked}); changeCheckStatus(attribute, checked);}} />\n          </Tooltip>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  toggleVisible: (index, visible) => {\n    dispatch(toggleSettingsVisible(index, visible));\n  },\n  changeTypeStatus: (att, value) => {\n    dispatch(changeTypeStatus(att, value));\n    dispatch(updateAttribute());\n  },\n  changeCheckStatus: (att, status) => {\n    dispatch(changeCheckStatus(att, status));\n    dispatch(updateAttribute());\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Attribute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setAlias } from './../../../../actions';\nimport { SortableElement } from 'react-sortable-hoc';\nimport { Input, Divider, Icon } from 'antd';\nimport Attribute from './Attribute';\nimport './sortableItem.css';\n\nconst SortableItem = SortableElement(({ attribute, setAlias }) => (\n    <div className=\"sortableItem\">\n      <Attribute attribute={attribute} />\n      <div className={`box ${attribute.__visible ? '' : 'hide' }`}>\n        <div className=\"settings\">\n          <div></div>\n          <div>\n            <hr />\n            <div className=\"color\">\n              <div>\n                <div>\n                  color\n                </div>\n              </div>\n              <div>\n                {/* <ColorPicker type={attribute.type} name={attribute.name} /> */}\n              </div>\n            </div>\n            <hr />\n            <div className=\"alias\">\n              <div>\n                alias\n              </div>\n              <div>\n                <Input\n                  size=\"small\"\n                  addonAfter={[<Icon key={attribute.name} style={{ color: 'blue' }} type=\"check\" />, <Divider key={attribute.name +'1'} type=\"vertical\" />, <Icon key={attribute.name+'2'} style={{ color: 'red' }} type=\"delete\"/>]}\n                  defaultValue={attribute.alias}\n                  onChange={(e) => setAlias(e.target.value, attribute.__id)}\n                />\n              </div>\n            </div>\n          </div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n));\n\nconst mapStateToProps = state => ({\n  attributes: state.shipyard.attributes\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setAlias: (alias, index) => {\n    dispatch(setAlias(alias, index));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortableItem);\n","import React from 'react';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport SortableItem from './SortableItem';\n\nconst SortableList = SortableContainer(({ attributes }) => (\n  <ul>\n    {attributes.map(attr => (\n      <SortableItem\n        key={attr.__id}\n        index={attr.__id}\n        attribute={attr}\n      />\n    ))}\n  </ul>\n));\n\nexport default SortableList;\n","import React from 'react';\nimport { arrayMove } from 'react-sortable-hoc';\nimport { connect } from 'react-redux';\nimport SortableList from './SortableList';\nimport { changeCheckStatus, updateAttribute, changeTypeStatus, toggleSettingsVisible, setAttributes } from './../../../../actions';\nimport './card.css';\n\nconst SortableComponent = ({ attributes, reorderAttributes }) => {\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    if (oldIndex !== newIndex) {\n      let copy = [...attributes];\n      let newArr = arrayMove(copy, oldIndex, newIndex);\n      reorderAttributes(newArr);\n    }\n  }\n  return (\n    <SortableList\n      attributes={attributes}\n      onSortEnd={onSortEnd}\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.shipyard.attributes,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeCheckStatus: (att, status) => {\n    dispatch(changeCheckStatus(att, status));\n    dispatch(updateAttribute());\n  },\n  changeTypeStatus: (att, value) => {\n    dispatch(changeTypeStatus(att, value));\n    dispatch(updateAttribute());\n  },\n  toggleVisible: (index, visible) => {\n    dispatch(toggleSettingsVisible(index, visible));\n  },\n  reorderAttributes: (atts) => {\n    dispatch(setAttributes(atts));\n    dispatch(updateAttribute());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortableComponent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { scaleOrdinal, scaleLinear, scaleTime } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport ActionGroup from './ActionGroup';\nimport Side from './sidebar/Sider';\nimport { updateAttribute, updateFilteredData } from './../../../actions';\nimport './sidebar.css';\nimport * as d3ScaleChromatic from \"d3-scale-chromatic\";\n\n// import navio from '../../../navio.js';\nimport navio from 'navio';\n\nconst cat = 'CATEGORICAL';\nconst dat = 'DATE';\nconst text = 'TEXT';\nconst bool = 'BOOLEAN';\nconst div = 'DIVERGENT';\nconst seq = 'SEQUENTIAL';\n\nclass NavioContainer extends Component {\n  componentDidMount() {\n    this.setupNavio();\n  }\n  componentDidUpdate() {\n    const { updated, updateAttribute } = this.props;\n    if (updated) {\n      this.deleteWidget();\n      updateAttribute();\n      this.setupNavio();\n    }\n  }\n  deleteWidget() {\n    var myNode = document.getElementById(\"vis\");\n    while (myNode.firstChild) {\n        myNode.removeChild(myNode.firstChild);\n    }\n  }\n  getScaleOrdinalScheme = (scheme) => {\n    switch(scheme) {\n      case 'scheme10':\n        return scaleOrdinal(d3ScaleChromatic.schemeCategory10);\n      default:\n        return scaleOrdinal(d3ScaleChromatic.schemeCategory10);\n    }\n  }\n  getScaleOrdinalColor = (color) => {\n    switch (color) {\n      case 'blue':\n        return scaleOrdinal(d3ScaleChromatic.schemeBlues);\n      case 'purple':\n        return scaleOrdinal(d3ScaleChromatic.schemePurples);\n      case 'red':\n        return scaleOrdinal(d3ScaleChromatic.schemeReds);\n      case 'green':\n        return scaleOrdinal(d3ScaleChromatic.schemeGreens);\n      case 'gray':\n        return scaleOrdinal(d3ScaleChromatic.schemeGreys);\n      case 'orange':\n        return scaleOrdinal(d3ScaleChromatic.schemeOranges);\n      default:\n        return scaleLinear(d3ScaleChromatic.schemeOranges);\n\n    }\n  }\n  getScaleTimeColor = (color) => {\n    switch (color) {\n      case 'blue':\n        return scaleTime(d3ScaleChromatic.schemeBlues);\n      case 'purple':\n        return scaleTime(d3ScaleChromatic.schemePurples);\n      case 'red':\n        return scaleTime(d3ScaleChromatic.schemeReds);\n      case 'green':\n        return scaleTime(d3ScaleChromatic.schemeGreens);\n      case 'gray':\n        return scaleTime(d3ScaleChromatic.schemeGreys);\n      case 'orange':\n        return scaleTime(d3ScaleChromatic.schemeOranges);\n      default:\n        return scaleTime(d3ScaleChromatic.schemeGreys);\n    }\n  }\n  setupNavio = () => {\n    let nn = navio(select(this.target), 600).updateCallback(this.props.updateFilteredData);\n    for (var i = 0; i < this.props.attributes.length; i++) {\n        let d = this.props.attributes[i];\n        if (d.checked) {\n          switch (d.type) {\n            case cat:\n              nn.addCategoricalAttrib(d.name);\n              break;\n            case text:\n              nn.addTextAttrib(d.name);\n              break;\n            case bool:\n              nn.addBooleanAttrib(d.name);\n              break;\n            case div:\n              nn.addDivergingAttrib(d.name);\n              break;\n            case dat:\n              nn.addDateAttrib(d.name);\n              break;\n            case seq:\n              nn.addSequentialAttrib(d.name);\n              break;\n            default:\n              nn.addTextAttrib(d.name);\n          }\n      }\n    }\n    nn.data(this.props.data);\n  }\n\n  render () {\n    const { showSidebar } = this.props;\n    const sidebarStyles = ['sidebar'];\n    const visStyles = ['vis'];\n\n    if (!showSidebar) {\n      sidebarStyles.push('hide');\n      visStyles.push('vis--hide');\n    }\n    return (\n      <div>\n        <ActionGroup />\n        <div className=\"container-vis\">\n          <div className={ sidebarStyles.join(' ') }>\n            <Side  />\n          </div>\n          <div className={ visStyles.join(' ') }>\n            <div\n              id=\"vis\"\n              ref={ target => this.target = target }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showSidebar: state.ui.showSidebar,\n  attributes: state.shipyard.attributes,\n  data: state.shipyard.data,\n  updated: state.shipyard.updated,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateAttribute: () => dispatch(updateAttribute()),\n  updateFilteredData: data => dispatch(updateFilteredData(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavioContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Table } from 'antd';\n\nconst Sample = ({ exportData, attributes }) => {\n  let preview = exportData.slice(0);\n  let columns = [];\n  let seqIndex = 0;\n  attributes.forEach(a => {\n    if (a.type === 'DATE' || a.data === 'DATE') {\n      preview.forEach(d => {\n        d[a.name] = d[a.name].toString();\n      })\n    }\n    if (a.data !== 'DATE' || a.type !== 'DATE') {\n      let column = {};\n      column.title = a.name;\n      column.dataIndex = a.name;\n      column.key = a.name;\n      column.width = 150;\n      columns.push(column);\n    }\n  });\n  preview.forEach(p => {\n    p.key = p.__seqId || seqIndex++;\n  });\n  return (\n    <Row>\n      <Table rowKey=\"key\" bordered pagination={true} dataSource={preview} columns={columns} scroll={{ x: columns.length * 150, y: '70vh' }} />\n    </Row>\n  );\n};\n\nconst mapStateToProps = state => ({\n  exportData: state.shipyard.exportData,\n  attributes: state.shipyard.attributes,\n});\n\nexport default connect(mapStateToProps)(Sample);\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport { connect } from 'react-redux';\nimport Loader from './loader/Loader';\nimport NavioContainer from './navio-container/NavioContainer';\nimport Sample from './sample-data/Sample';\n\n\nconst Playground = ({ dataLoaded, showSidebar }) => {\n  const span = showSidebar ? 24 : 12;\n  return (\n    <div style={{ height: '100%', margin: '0px 16px'}}>\n      <div>\n        {\n          dataLoaded ?\n          <Row gutter={16}>\n            <Col span={span}>\n              <NavioContainer />\n            </Col>\n            <Col span={span}>\n              <Sample />\n            </Col>\n          </Row>\n          :\n          <Loader />\n        }\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  dataLoaded: state.ui.dataLoaded,\n  showSidebar: state.ui.showSidebar,\n});\n\nexport default connect(mapStateToProps)(Playground);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from 'antd';\nimport './loader.css';\n\nconst Loader = ({ loading }) => {\n    const status = loading ? 'loader--show' : 'loader--hide';\n    return  (\n    <div className={status}>\n        <Icon type=\"loading\" style={{ fontSize: '64px' }} />\n    </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    loading: state.ui.loading,\n  });\n\nexport default connect(mapStateToProps)(Loader);\n","import { Affix, Layout } from 'antd';\nimport React from 'react';\nimport HeaderComponent from './header/Header';\nimport FooterComponent from './footer/Footer';\nimport Playground from './playground/Playground';\nimport Loader from './loader/Loader';\n\nconst { Header, Content, Footer } = Layout;\nconst headerStyle = {\n  marginBottom: '1em',\n  padding: 0,\n  backgroundColor: 'white',\n  boxShadow: '0 5px 4px rgba(0,0,0,0.15), 0 4px 4px rgba(0,0,0,0.12)',\n};\nconst mainStyle = {\n  minHeight: '100vh',\n  height: '100vh'\n};\nconst App = () => (\n  <div style={mainStyle}>\n    <Loader></Loader>\n    <Layout style={{ height: '100%' }}>\n      <Affix>\n        <Header style={headerStyle}>\n          <HeaderComponent />\n        </Header>\n      </Affix>\n      <Content>\n        <Playground />\n      </Content>\n      <Footer>\n        <FooterComponent />\n      </Footer>\n    </Layout>\n  </div>\n);\n\nexport default App;\n","import {\n  SET_DATA,\n  RESET_DATA,\n  CHANGE_CHECK_STATUS,\n  CHANGE_TYPE_STATUS,\n  UPDATE_ATTRIBUTE,\n  UPDATE_FILTERED_DATA,\n  TOGGLE_SETTINGS_VISIBLE,\n  SET_ATTRIBUTES,\n  SET_ATTRIBUTE_COLOR,\n  TOGGLE_COLOR_VISIBLE,\n  SET_ALIAS,\n} from './../actions/index';\n\nconst initialState = {\n  data: [],\n  attributes: [],\n  exportData: [],\n  source: [],\n  updated: false,\n  datasets: [\n    {\n      id: 1,\n      title: 'Followers of presidential candidates Colombia 2018',\n      description: 'Dataset with information about followers on twitter of the presidential cadidates.',\n      name: 'all_followers_id.csv',\n      size: 1048575,\n      n_attributes: 10,\n    },\n    {\n      id: 2,\n      title: 'MoMA Collection',\n      description: 'Evolving collection contains almost 130,000 works of modern and contemporary art.',\n      name: 'Artworks_less_columns.csv',\n      size: 131585,\n      n_attributes: 14,\n    },\n    {\n      id: 3,\n      title: 'VAST Challenge 2017',\n      description: 'The VAST Challenge 2017 offered three mini-challenges and a grand challenge dealing with environmental problems potentially caused by human patterns of life and potentially harmful chemically laden effluent plumes being emitted from factory smokestacks. The data provided included traffic patterns, sensor data though the Boonsong Lekagul Nature Preserve.',\n      name: 'Lekagul Sensor Data.csv',\n      size: 171477,\n      n_attributes: 4,\n    },\n    {\n      id: 4,\n      title: 'IEEE VIS Papers',\n      description: 'IEEE VIS Publications 1990-2018',\n      name: 'IEEE_VIS_papers_1990_2018.csv',\n      size: 3101,\n      n_attributes: 18\n    }\n  ],\n};\nconst shipyard = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const { data, attributes, source } = action;\n      return Object.assign({}, state, {\n        source,\n        data,\n        attributes,\n        exportData: data,\n      });\n    case RESET_DATA:\n      return initialState;\n    case CHANGE_CHECK_STATUS:\n      return Object.assign({}, state, {\n        attributes: state.attributes.map(attr => {\n          if (attr.name === action.attribute.name) {\n            attr.checked = action.status;\n          }\n          return attr;\n        }),\n      });\n    case CHANGE_TYPE_STATUS:\n      return Object.assign({}, state, {\n        attributes: state.attributes.map(attr => {\n          if (attr.name === action.attribute.name) {\n            attr.type = action.status;\n          }\n          return attr;\n        }),\n        data: state.source.map(datum => {\n          switch(action.status) {\n            case 'DATE':\n              datum[action.attribute.name] = new Date(datum[action.attribute.name]);\n              break;\n            case 'SEQUENTIAL':\n              datum[action.attribute.name] = +datum[action.attribute.name];\n              break;\n            case 'BOOLEAN':\n              let stringValue = datum[action.attribute.name];\n              if (stringValue.toLowerCase() === 'true') {\n                datum[action.attribute.name] = true\n              } else {\n                datum[action.attribute.name] = false;\n              }\n              break;\n            default:\n              datum[action.attribute.name] = datum[action.attribute.name].toString();\n          }\n          return datum;\n        })\n      });\n    case UPDATE_ATTRIBUTE:\n      return Object.assign({}, state, {\n        updated: !state.updated,\n      });\n    case UPDATE_FILTERED_DATA:\n      return Object.assign({}, state, {\n        exportData: action.exportData,\n      });\n    case TOGGLE_SETTINGS_VISIBLE:\n      return Object.assign({}, state, {\n        attributes: state.attributes.map(attr => {\n          if (action.index === attr.__id) {\n            attr.__visible = action.visible;\n          }\n          return attr;\n        }),\n      });\n    case SET_ATTRIBUTES:\n      return Object.assign({}, state, {\n        attributes: action.attributes,\n      });\n    case SET_ATTRIBUTE_COLOR:\n      return Object.assign({}, state, {\n        attributes: state.attributes.map(attr => {\n          if (attr.name === action.attributeName) {\n            attr.color = action.color;\n          }\n          return attr;\n        }),\n      });\n    case SET_ALIAS:\n      return Object.assign({}, state, {\n        attributes: state.attributes.map(attr => {\n          if (action.index === attr.__id) {\n            attr.alias = action.alias;\n          }\n          return attr;\n        })\n      });\n    case TOGGLE_COLOR_VISIBLE:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default shipyard;\n","import { SHOW_MODAL, TOGGLE_LOADING, TOGGLE_DATA_LOADED, RESET_DATA, TOGGLE_SIDEBAR, HIDE_ATTRIBUTE, SHOW_ATTRIBUTE, SET_COMPONENT_CLASSES, SWAP_COMPONENT_CLASSES } from './../actions/index';\n\nconst initialState = {\n  confirmLoading: false,\n  closed: true,\n  loading: false,\n  visible: false,\n  dataLoaded: false,\n  showSidebar: false,\n};\nconst ui = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return Object.assign({}, state, {\n        visible: !state.visible,\n      });\n    case TOGGLE_LOADING:\n      return Object.assign({}, state, {\n        loading: !state.loading,\n      });\n    case TOGGLE_DATA_LOADED:\n      return Object.assign({}, state, {\n        dataLoaded: !state.dataLoaded,\n      });\n    case RESET_DATA:\n      return initialState;\n    case TOGGLE_SIDEBAR:\n      return Object.assign({}, state, {\n        showSidebar: !state.showSidebar,\n      });\n    case HIDE_ATTRIBUTE:\n      return Object.assign({}, state, {\n        attributes: state.attributes.map(attr => {\n          if (action.index === attr.__id) {\n            attr.__visible = false;\n          }\n          return attr;\n        })\n      });\n    case SHOW_ATTRIBUTE:\n      return Object.assign({}, state, {\n        attributes: state.attributes.map(attr => {\n          if (action.index === attr.__id) {\n            attr.__visible = true;\n          }\n          return attr;\n        })\n      })\n    case SET_COMPONENT_CLASSES:\n      let array = [];\n      action.attributes.forEach((d, k)=> {\n        let i = {};\n        i.classes = ['box', 'hide'];\n        i.index = k;\n        array.push(i);\n      })\n      return Object.assign({}, state, {\n        componentClasses: array,\n      })\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import { combineReducers } from 'redux';\nimport shipyard from './shipyard';\nimport ui from './ui';\n\nexport default combineReducers({\n  shipyard,\n  ui,\n});\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport thunkMiddleware from 'redux-thunk';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createLogger } from 'redux-logger';\nimport App from './components/App';\nimport rootReducer from './reducers';\nimport registerServiceWorker from './registerServiceWorker';\nimport './App.css';\n\nconst loggerMiddleware = createLogger();\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware,\n  ),\n);\nrender(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}